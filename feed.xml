<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>好记性不如写博文！</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 28 Oct 2017 10:12:37 +0800</pubDate>
    <lastBuildDate>Sat, 28 Oct 2017 10:12:37 +0800</lastBuildDate>
    <generator>Jekyll v3.6.0</generator>
    
      <item>
        <title>Bioinformatics Data Skills Chapter 10</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#the-fasta-format&quot; id=&quot;markdown-toc-the-fasta-format&quot;&gt;The FASTA Format&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-fastq-format&quot; id=&quot;markdown-toc-the-fastq-format&quot;&gt;The FASTQ Format&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nucleotide-codes&quot; id=&quot;markdown-toc-nucleotide-codes&quot;&gt;Nucleotide Codes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#base-qualities&quot; id=&quot;markdown-toc-base-qualities&quot;&gt;Base Qualities&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;换算&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-fasta-format&quot;&gt;The FASTA Format&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;格式&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&amp;gt;ENSMUSG00000020122|ENSMUST00000138518              #第一行，ID信息等，以“&amp;gt;”开头

CCCTCCTATCATGCTGTCAGTGTATCTCTAAATAGCACTCTCAACCCCCGTGAACTTGGTTATTAAAAACATGCCCAAAGTCTGGGAGCCAGGGCTGCAGGGAAATACCACAGCCTCAGTTCATCAAAACAGTTCATTGCCCAAAATGTTCTCAGCTGCAGCTTTCATGAGGTAACTCCAGGGCCCACCTGTTCTCTGGT    #第二行，序列

&amp;gt;ENSMUSG00000020122|ENSMUST00000125984

GAGTCAGGTTGAAGCTGCCCTGAACACTACAGAGAAGAGAGGCCTTGGTGTCCTGTTGTCTCCAGAACCCCAATATGTCTTGTGAAGGGCACACAACCCCTCAAAGGGGTGTCACTTCTTCTGATCACTTTTGTTACTGTTTACTAACTGATCCTATGAATCACTGTGTCTTCTCAGAGGCCGTGAACCACGTCTGCAAT
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;缺点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;没有非常标准的ID格式，在用正则提取的时候容易出现问题。&lt;/p&gt;

&lt;h3 id=&quot;the-fastq-format&quot;&gt;The FASTQ Format&lt;/h3&gt;

&lt;p&gt;FASTQ 格式是在 FASTA 格式上的扩展，增加了每个碱基的质量得分。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;格式&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;@DJB775P1:248:D0MDGACXX:7:1202:12362:49613              #以“@”开头，信息行

TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA    #序列

+                                                       #“+”表示序列结束

JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA    #每个碱基得分

@DJB775P1:248:D0MDGACXX:7:1202:12782:49716

CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG

+

IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;缺点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;既是信息行的开头，又可以是碱基等分的质量字母，在提取的时候容易出错&lt;/p&gt;

&lt;h3 id=&quot;nucleotide-codes&quot;&gt;Nucleotide Codes&lt;/h3&gt;

&lt;h3 id=&quot;base-qualities&quot;&gt;Base Qualities&lt;/h3&gt;

&lt;p&gt;由于每个碱基的质量得分由 ASCⅡ 值表示, 早期不同的平台用的编码范围不同，现在都趋于用 Sanger 方法。&lt;/p&gt;

&lt;p&gt;FASTQ quality schemes (adapted from Cock et al., 2010 with permission)&lt;br /&gt;
|————————————–+———————-+——-+——————-+——————-|
|Name                                  |ASCII character range |Offset |Quality score type |Quality score range|
|:————————————-+:——————–:+:—–:+:—————–:+:—————–:|
|Sanger, Illumina (versions 1.8 onward)|33–126                |33     |PHRED              |0–93               |
|Solexa, early Illumina (before 1.3)   |59–126                |64     |Solexa             |5–62               |
|Illumina (versions 1.3–1.7)           |64–126                |64     |PHRED              |0–62               |
|————————————–+———————-+——-+——————-+——————-|&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;换算&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Sanger quality score -&amp;gt; PHRED quality scores&lt;br /&gt;
&lt;strong&gt;PHRED = Sanger quality score - 33&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PHRED quality score -&amp;gt;  P value the base is correct&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;P = 10^{ - Q/10 }&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;P value -&amp;gt; qualities(Q)&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;Q = -10{\log}_{10}P&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;run a program, compare output to original data, run a program, compare output, and so on.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 27 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/10/27/sequence-data-Bioinformatics-Data-Skills/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/27/sequence-data-Bioinformatics-Data-Skills/</guid>
        
        <category>bioinformatics</category>
        
        
        <category>笔记</category>
        
      </item>
    
      <item>
        <title>学习ranges思想</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#overlapping-ranges&quot; id=&quot;markdown-toc-overlapping-ranges&quot;&gt;寻找overlapping ranges&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ranges&quot; id=&quot;markdown-toc-ranges&quot;&gt;寻找最近的ranges，并计算距离&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;第9章提到要建立range思想，在此简单记录。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;range: 某个染色体序列上有start position和end position的一段特定单链，一个基因是一个range，一个read也是一个range。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;overlapping-ranges&quot;&gt;寻找overlapping ranges&lt;/h3&gt;

&lt;p&gt;1&amp;gt; 理解不同类型的overlaps，思考对一个特定的任务，哪种类型最合适，是最重要的。
overlaps的类型有：
- any
- within
- start
- end
- equal&lt;br /&gt;
其中 any 和 within 最常用&lt;/p&gt;

&lt;p&gt;2&amp;gt; 为了减少比对次数，提高效率，首先要先对subjet sequence排序,称为interval tree。&lt;/p&gt;

&lt;h3 id=&quot;ranges&quot;&gt;寻找最近的ranges，并计算距离&lt;/h3&gt;
&lt;p&gt;### Run Length Encoding and Views&lt;br /&gt;
为了节约内存，对覆盖度进行编码，不好理解，看原文。&lt;/p&gt;

</description>
        <pubDate>Tue, 24 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/10/24/thinking-ranges-Bioinformatics-Data-Skills/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/24/thinking-ranges-Bioinformatics-Data-Skills/</guid>
        
        <category>bioinformatics</category>
        
        
        <category>笔记</category>
        
      </item>
    
      <item>
        <title>linux下的中文输入问题</title>
        <description>&lt;h3 id=&quot;fcitx&quot;&gt;解决由于环境变量引起的软件不能使用中文输入法fcitx的问题&lt;/h3&gt;

&lt;p&gt;linux 中的环境变量一直是一个让人头庝的问题，很多安装程序出现问题要不是权限，要不就是环境变量不对了。&lt;/p&gt;

&lt;p&gt;一些软件，例如wps、rstudio、foxitreader等有时会无法使用 fcitx 输入法，也就无法输入中文，原因是环境变量没有设定。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;解决办法&lt;/h4&gt;

&lt;p&gt;在启动脚本中写入
&lt;code class=&quot;highlighter-rouge&quot;&gt;
export XMODIFIERS=&quot;@im=fcitx&quot;
export QT_IM_MODULE=&quot;fcitx&quot;
&lt;/code&gt;
重启就可以了。&lt;/p&gt;

&lt;p&gt;需要注意的是，有些软件的启动脚本在&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/&lt;/code&gt;目录下，例如wps在&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/wps 或 wpp 或 et&lt;/code&gt;；而Foxitreader的在安装目录下，即&lt;code class=&quot;highlighter-rouge&quot;&gt;Foxitreader/Foxitreader.sh&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/06/28/input-Chinese-in-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/28/input-Chinese-in-linux/</guid>
        
        <category>input</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>faststructure 的简单使用</title>
        <description>&lt;p&gt;*content&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rajanil.github.io/fastStructure/&quot;&gt;faststructure&lt;/a&gt; 比 structure 的计算速度更快，适合数据量较大的群体结构计算。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 安装&lt;/h3&gt;

&lt;p&gt;faststructure 是基于 python 的脚本软件，首先需要一些 python 包
1. Numpy
2. Scipy
3. Cython
4. GNU Scientific Library&lt;/p&gt;

&lt;p&gt;前 3 建议用 pip 安装。
gsl（GNU Scientific Library）需要下载安装：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
wget http://mirrors.ustc.edu.cn/gnu/gsl/gsl-latest.tar.gz
cd gsl-2.4
sudo ./configure
sudo make 
sudo make install
&lt;/code&gt;
fastStruce 的安装按官网步骤，没难点。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2. 使用&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;血缘关系计算
```
python structure.py&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is how you can use this script&lt;/p&gt;

&lt;p&gt;Usage: python structure.py
-K &lt;int&gt;   (number of populations) # 注意 K 是大写
--input=&lt;file&gt;   (/path/to/input/file)
--output=&lt;file&gt;   (/path/to/output/file)
--tol=&lt;float&gt;   (convergence criterion; default: 10e-6)
--prior={simple,logistic}   (choice of prior; default: simple)
--cv=&lt;int&gt;   (number of test sets for cross-validation, 0 implies no CV step; default: 0)
--format={bed,str} (format of input file; default: bed)
--full   (to output all variational parameters; optional)
--seed=&lt;int&gt;   (manually specify seed for random number generator; optional)
```&lt;/int&gt;&lt;/int&gt;&lt;/float&gt;&lt;/file&gt;&lt;/file&gt;&lt;/int&gt;&lt;/p&gt;

&lt;p&gt;最主要的参数有三个：
- -K：手动设定群体数
- –input：plink bed格式
- –output：输出文件名&lt;/p&gt;

&lt;p&gt;例：&lt;code class=&quot;highlighter-rouge&quot;&gt;python structure.py -K 3 --input=genotypes --output=genotypes_output&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;选择合适的 K 值&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;chooseK.py 脚本用于选择合适的 K 值。
首先自己写循环计算 K=1~10，输出文件前缀假设为 testout_simple
命令：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
$ python chooseK.py --input=test/testoutput_simple
&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;可视化&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;distruct.py 脚本用于可视化&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt; python distruct.py

 Here is how you can use this script

 Usage: python distruct.py
-K &amp;lt;int&amp;gt;  (number of populations)
--input=&amp;lt;file&amp;gt;  (/path/to/input/file; same as output flag passed to structure.py)
--output=&amp;lt;file&amp;gt;   (/path/to/output/file)
--popfile=&amp;lt;file&amp;gt;  (file with known categorical labels; optional)
--title=&amp;lt;figure title&amp;gt;  (a title for the figure; optional)
&lt;/div&gt;
&lt;p&gt;参数：
- -K：合适的 K 值
- –input：structure.py 的输出文件位置
- –output：输出文件，格式可以为.svg .pdf .jpg等
- –popfile：可以对分组使用不同的标签，每个样本一个标签，样本顺序要与 map 文件中的样本顺序相同。&lt;/p&gt;

&lt;p&gt;例：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
python distruct.py -K 5 --input=test/testoutput_simple --output=test/testoutput_simple_distruct.svg
&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/06/21/faststructure-introduction/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/21/faststructure-introduction/</guid>
        
        <category>使用手册</category>
        
        
        <category>bioinformatics</category>
        
      </item>
    
      <item>
        <title>Parameter About Gragh In R</title>
        <description>&lt;h2 id=&quot;r-&quot;&gt;R 语言基础作图函数画图常用的参数&lt;/h2&gt;

&lt;p&gt;在 linux 上修图比较麻烦，因为没有 PS，没有 AI，而且 GIMP 又不会用，所以决定尝试直接用 R 生成最终的图片，所幸结果还可以。
图片格式、大小、分辨率都可以在 png、tiff、jpep 等指定。&lt;/p&gt;

&lt;h3 id=&quot;par&quot;&gt;图片布局用 par（）函数&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;mfrow/mfcol：设定图片的填充顺序，行/列，例如，mfrow=c（2，3），表示按行填充，两行三列&lt;/li&gt;
  &lt;li&gt;mgp：mgp=c（2.5,1,0）,第一个参数是坐标轴（边框）到轴标签的距离，单位是标签字符的大小；第二个参数是坐标轴到刻度的距离，第三个参数是与实际坐标轴的距离。&lt;/li&gt;
  &lt;li&gt;mar：mar=c（6，6，3，3），分别为下左上右的边距&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果需要调整标签大小，最好同时调整 mgp 和 mar 参数，否则标签太大会显示不完整；一般标签在 x 轴和 y 轴，所以下左可以稍大些。
这些参数也可以用在 png（）、jpeg（）等函数中&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;图片坐标轴和文字属性都有参数可以设定，如：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;xlim、ylim&lt;/li&gt;
  &lt;li&gt;title&lt;/li&gt;
  &lt;li&gt;xlab&lt;/li&gt;
  &lt;li&gt;ylab&lt;/li&gt;
  &lt;li&gt;bty：设定边框&lt;/li&gt;
  &lt;li&gt;cex：点或线的大小&lt;/li&gt;
  &lt;li&gt;cex.axis：刻度大小&lt;/li&gt;
  &lt;li&gt;cex.lab：轴标签的大小&lt;/li&gt;
  &lt;li&gt;col&lt;/li&gt;
  &lt;li&gt;las：坐标方向（垂直或平行于坐标轴，0 或 1）
…
这里主要介绍 mtext，它可以向生成后的图片添加文本
&lt;code class=&quot;highlighter-rouge&quot;&gt;
mtext(text, side = 3, line = 0, outer = FALSE, at = NA,
    adj = NA, padj = NA, cex = NA, col = NA, font = NA, ...）
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;几个常用参数
- text：要添加的文本，用 “” 引起来
- side：在哪边输出文本，1234，代表下左上右
- line：在距边框的距离，负数为向内
- adj：0 表示左对齐或下对齐，1 表示右对齐或上对齐
- at: 指定字符串的起始位置，例如 at=0.5，起始字符串与 x 轴 0.5 刻度对应，可以与 adj 搭配使用
- cex：字体大小
…&lt;/p&gt;

&lt;p&gt;需要注意的是，字符串大小不会与图片的大小同步调节，所以要多次尝试，找一个合适的大小。&lt;/p&gt;

</description>
        <pubDate>Tue, 16 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/16/parameter-about-gragh-in-R/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/16/parameter-about-gragh-in-R/</guid>
        
        
      </item>
    
      <item>
        <title>在linux下添加用户</title>
        <description>&lt;h2 id=&quot;useradd-&quot;&gt;在使用 useradd 命令时遇到的问题&lt;/h2&gt;

&lt;p&gt;useradd 是添加新用户的命令，具体参数不再详述。
这里主要记录一下遇到的一个小问题。
linux 版本：Ubuntu 16.04&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;问题1：没有家目录&lt;/h3&gt;

&lt;p&gt;原因：Ubuntu 系统中，使用 useradd 添加新用户需要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; 参数指定用户目录，若用户目录不存在，同时用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; 参数创建主目录。推测添加用户的老师当时没有加参数。
解决办法：没办法，找他新建主目录。&lt;/p&gt;

&lt;h3 id=&quot;bashrc-&quot;&gt;问题2：家目录下没有 .bashrc 文件&lt;/h3&gt;

&lt;p&gt;原因：不清楚
解决办法：从 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/skel/&lt;/code&gt; 中复制 &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;.profile&lt;/code&gt; 到家目录&lt;/p&gt;

&lt;h3 id=&quot;source-&quot;&gt;问题3：source 命令不管用，提示找不到文件&lt;/h3&gt;

&lt;p&gt;原因：没有使用完整路径，但是在大多数系统不需要完整路径就能用，不清楚具体原因。（让我想起了 aspera 也是这毛病，linux 就是任性）
解决办法：使用完整路径 &lt;code class=&quot;highlighter-rouge&quot;&gt;source ./.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;ps：
exec bash 命令会重启 shell，也就是你当前的 shell 正执行的命令会终止。
source .bashrc 可以在当前 shell 上更改配置。&lt;/p&gt;

</description>
        <pubDate>Tue, 16 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/16/problem-when-use-useradd-command/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/16/problem-when-use-useradd-command/</guid>
        
        <category>command</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>linux下编码问题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#httpwwwitnosenetdetail6524108html&quot; id=&quot;markdown-toc-httpwwwitnosenetdetail6524108html&quot;&gt;&lt;a href=&quot;http://www.itnose.net/detail/6524108.html&quot;&gt;转&lt;/a&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;查看文件编码&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;文件编码转换&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;文件名编码转换:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;httpwwwitnosenetdetail6524108html&quot;&gt;&lt;a href=&quot;http://www.itnose.net/detail/6524108.html&quot;&gt;转&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;在 Linux 中操作 windows 下的文件，可能会经常遇到文件编码转换的问题。Windows中默认的文件格式是GBK(gb2312)，而Linux一般都是UTF-8。下面介绍一下，在Linux中如何查看文件的编码及如何进行对文件进行编码转换。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;查看文件编码&lt;/h3&gt;
&lt;p&gt;在Linux中查看文件编码可以通过以下几种方式：
#### 在Vim中可以直接查看文件编码
&lt;code class=&quot;highlighter-rouge&quot;&gt;:set fileencoding&lt;/code&gt;
即可显示文件编码格式。
如果你只是想查看其它编码格式的文件或者想解决用Vim查看文件乱码的问题，那么你可以在
~/.vimrc 文件中添加以下内容：
&lt;code class=&quot;highlighter-rouge&quot;&gt;set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936&lt;/code&gt;
这样，就可以让vim自动识别文件编码（可以自动识别UTF-8或者GBK编码的文件），其实就是依照fileencodings提供的编码列表尝试，如果没有找到合适的编码，就用latin-1(ASCII)编码打开。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;文件编码转换&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在Vim中直接进行转换文件编码,比如将一个文件转换成utf-8格式
&lt;code class=&quot;highlighter-rouge&quot;&gt;:set fileencoding=utf-8&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iconv 转换，iconv的命令格式如下：
&lt;code class=&quot;highlighter-rouge&quot;&gt;iconv -f encoding -t encoding inputfile&lt;/code&gt;
比如将一个UTF-8 编码的文件转换成GBK编码
&lt;code class=&quot;highlighter-rouge&quot;&gt;
iconv -f GBK -t UTF-8 file1 -o file2
iconv -f gbk -t utf8 linux常用命令.txt &amp;gt; linux常用命令.txt.utf8
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-2&quot;&gt;文件名编码转换:&lt;/h3&gt;

&lt;p&gt;从Linux 往 windows拷贝文件或者从windows往Linux拷贝文件，有时会出现中文文件名乱码的情况，出现这种问题的原因是因为，windows的文件名 中文编码默认为GBK,而Linux中默认文件名编码为UTF8,由于编码不一致，所以导致了文件名乱码的问题，解决这个问题需要对文件名进行转码。
在Linux中专门提供了一种工具convmv进行文件名编码的转换，可以将文件名从GBK转换成UTF-8编码,或者从UTF-8转换到GBK。&lt;/p&gt;

&lt;p&gt;首先看一下你的系统上是否安装了convmv,如果没安装的话用:
&lt;code class=&quot;highlighter-rouge&quot;&gt;yum -y install convmv&lt;/code&gt;
安装。&lt;/p&gt;

&lt;p&gt;下面看一下convmv的具体用法：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;convmv -f 源编码 -t 新编码 [选项] 文件名&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;常用参数：
-r 递归处理子文件夹
–notest 真正进行操作，请注意在默认情况下是不对文件进行真实操作的，而只是试验。
–list 显示所有支持的编码
–unescap 可以做一下转义，比如把%20变成空格
比如我们有一个utf8编码的文件名，转换成GBK编码，命令如下：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
convmv -f UTF-8 -t GBK --notest utf8编码的文件名
&lt;/code&gt;
这样转换以后”utf8编码的文件名”会被转换成GBK编码（只是文件名编码的转换，文件内容不会发生变化）&lt;/p&gt;

&lt;p&gt;为什么在linux下查看.txt格式的文件会出现乱码呢？因为linux操作系统和windows操作系统对于中文的压缩方式不同。在windows 中，中文压缩一般是.gbbk，而在linux环境中压缩为utf8，这就导致了在windows下能正常显示的.txt文件在linux中打开后呈现乱 码状态。对于这种情况的处理方法为在包含要打开的.txt文件的目录下，在终端输入：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
iconv -f gbk -t utf8 filename.txt -&amp;gt; filename.txt.utf8
&lt;/code&gt;
用ls命令查看，生成了.utf8格式的文件，此时打开该文件就不再有乱码了.&lt;/p&gt;

</description>
        <pubDate>Tue, 16 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/16/linux-file-encoding/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/16/linux-file-encoding/</guid>
        
        <category>format</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>Ubuntu设置静态IP</title>
        <description>&lt;h2 id=&quot;ubuntu-1610-&quot;&gt;手动设置 Ubuntu 16.10 的网卡&lt;/h2&gt;

&lt;p&gt;最近新换了一个环境，需要手动设置 ip 地址上网，所以搞了一下！&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;查看网卡名&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;ip addr
&lt;/div&gt;
&lt;p&gt;我的有线网卡为：enp7s0
无线网卡为：wlp8s0
&lt;strong&gt;一定要看好网卡名字！！！&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;手动设置 ip
```
sudo vi /etc/network/interfaces&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以下为输出&lt;/p&gt;

&lt;h1 id=&quot;interfaces5-file-used-by-ifup8-and-ifdown8&quot;&gt;interfaces(5) file used by ifup(8) and ifdown(8)&lt;/h1&gt;
&lt;p&gt;auto lo
iface lo inet loopback&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;以下为后来添加&lt;/h1&gt;
&lt;p&gt;auto enp7s0
iface enp7s0 inet static
address 192.168.56.42
netmask 255.255.255.0
gateway 192.168.56.254&lt;/p&gt;

&lt;h1 id=&quot;dns-nameserver-21033601&quot;&gt;dns-nameserver 210.33.60.1&lt;/h1&gt;
&lt;p&gt;dns-nameserver 202.107.200.69
```&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;重启
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo /etc/init.d/networking restart
sudo resolvconf -u    #重启 dns，否则无法解析域名
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;备用
如果还是无法解析域名，可以试试：
```
vi /etc/resolvconf/resolv.conf.d/base&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以下为输出&lt;/p&gt;

&lt;p&gt;nameserver 210.33.60.1
nameserver 202.107.200.69&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;刷新配置文件
&lt;/div&gt;
&lt;p&gt;sudo resolvconf -u
```&lt;/p&gt;

&lt;p&gt;补：
用了几天突然 DNS 又不行了，做了以下修改：
```
sudo vi /etc/resolv.conf&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;添加以下内容：&lt;/h1&gt;
&lt;p&gt;nameserver 210.33.60.1 #或者其它 DNS 地址
&lt;code class=&quot;highlighter-rouge&quot;&gt;
重启
&lt;/code&gt;
sudo /etc/init.d/networking restart
sudo resolvconf -u    #重启 dns，否则无法解析域名
```&lt;/p&gt;
</description>
        <pubDate>Wed, 10 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/10/set-static-ip-ubuntu16/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/10/set-static-ip-ubuntu16/</guid>
        
        <category>internet</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>linux下通过校园网认证</title>
        <description>&lt;h2 id=&quot;wget--curl--linux--web-&quot;&gt;用 wget 或者 curl 在 linux 上通过 web 认证&lt;/h2&gt;

&lt;p&gt;一般校园网都会设置网关，每个人用帐号密码通过 web 认证进行上网。这在图形界面很容易，因为网页会自动跳转到认证界面。但是，如果在服务器的纯命令行界面，该如何通过 web 认证呢？这里推荐两种方法：curl 和 wget。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 查看完整的认证过程&lt;/h3&gt;

&lt;p&gt;这是最重要的一步！！！
大部分的 web 认证都是基于 form 的认证方式，也就是你浏览器通过一个 form ，把用户名和密码 post 给服务器。
所以 form 的格式是最重要的，不同的学校，可能会有所不同，因此，你应该先通过查看登陆界面的源码，了解你的 form data 和 Request URL。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2. 认证&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;wget 方式
&lt;code class=&quot;highlighter-rouge&quot;&gt;
wget --post-data=&quot;username=abc&amp;amp;password=123456&amp;amp;pwd=123456&amp;amp;secret=true&quot; --save-cookies=webcookie.txt --keep-session-cookies http://10.0.0.252/webAuth/ # 将登陆信息存储成 cookies，以便下次使用
wget --load-cookies=webcookie.txt http://10.0.0.252/webAuth # 直接用载入 cookies，进行认证
wget --post-data=&quot;username=abc&amp;amp;password=123456&amp;amp;pwd=123456&amp;amp;secret=true&quot; http://10.0.0.252/webAuth/ # 直接使用帐号密码登陆
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如时登陆不成功，请先检查 form data 和 URL 是否格式正确！！！&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;curl 方式&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;curl --data &quot;username=liuqibao&amp;amp;password=666666&amp;amp;pwd=666666&amp;amp;secret=true&quot; http://10.0.0.252/webAuth/
&lt;/div&gt;

&lt;p&gt;最后再说一遍，一定要看清 form data 和 Request URL 的格式！！！&lt;/p&gt;
</description>
        <pubDate>Mon, 01 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/01/web-authentication-by-wget-or-curl-in-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/01/web-authentication-by-wget-or-curl-in-linux/</guid>
        
        <category>internet</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>fastqc 软件的简单使用和结果解读</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;简单使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;结果&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;基础统计&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;每个碱基的测序质量&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#per-sequence-quality-scores&quot; id=&quot;markdown-toc-per-sequence-quality-scores&quot;&gt;Per Sequence Quality Scores&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#per-base-sequence-content&quot; id=&quot;markdown-toc-per-base-sequence-content&quot;&gt;Per Base Sequence Content&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#per-sequence-gc-&quot; id=&quot;markdown-toc-per-sequence-gc-&quot;&gt;Per Sequence GC 含量&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#per-base-n-content&quot; id=&quot;markdown-toc-per-base-n-content&quot;&gt;Per Base N Content&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sequence-length-distribution&quot; id=&quot;markdown-toc-sequence-length-distribution&quot;&gt;Sequence Length Distribution&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#duplicate-sequences&quot; id=&quot;markdown-toc-duplicate-sequences&quot;&gt;Duplicate Sequences&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#overrepresented-sequences&quot; id=&quot;markdown-toc-overrepresented-sequences&quot;&gt;Overrepresented Sequences&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#adapter-content&quot; id=&quot;markdown-toc-adapter-content&quot;&gt;Adapter Content&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kmer-content&quot; id=&quot;markdown-toc-kmer-content&quot;&gt;Kmer Content&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#per-tile-sequence-quality&quot; id=&quot;markdown-toc-per-tile-sequence-quality&quot;&gt;Per Tile Sequence Quality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;简单使用&lt;/h3&gt;

&lt;p&gt;fastqc 是一个高能量测序数据 QC 分析工具。
作用命令：
&lt;code class=&quot;highlighter-rouge&quot;&gt;
fastqc seqfile1 seqfile2 ... seqfileN
fastqc fastqc [-o output dir] [--(no)extract] [-f fastq|bam|sam] [-c contaminant file] seqfile1 .. seqfileN
&lt;/code&gt;
options：
-o：将结果输出到指定文件夹。注意，文件夹必须已存在，程序不会自己创建文件夹。
–casava：输入数据为 casava 数据
–nano：输入数据为 naopore 序列数据，fast5 格式。
–extract：输出文件不压缩，默认为压缩
–noextract：压缩输出文件，如果在非交互式界面建议这样做。
-f：强制指定输入文件格式，默认自动识别。可用格式有：bam,sam,bam_mapped,sam_mapped,fastq
-t：多线程控制。注意，每个线程需要 250M 内存，请合理使用。32 位的系统不能多于 6 个线程。
-c：污染物选项，非默认选项
-a：接头文件，非默认选项
-l：自定义评估标准，也可以删除某些评估项目。
-k: 调节 kmers 设定某特定短序列的长度，范围 2-10，默认 7.
-q：沉默模式，仅报告错误，不输出标准输出
-d：设置存储产生图片时的临时文件的文件夹，默认 /temp&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;结果&lt;/h3&gt;

&lt;h4 id=&quot;section-2&quot;&gt;基础统计&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Filename&lt;/li&gt;
  &lt;li&gt;File type：常规碱基还是 colorspace 序列，后者需要转换为常规碱基。&lt;/li&gt;
  &lt;li&gt;Encoding：Q 值的 ASCII 编码版本&lt;/li&gt;
  &lt;li&gt;Total Sequences：有两个值，一个实际值，一个估计值，目前来说一样，软件还没找到好的估计方法。&lt;/li&gt;
  &lt;li&gt;Filtered Sequences：在 Casava 模式下运行时过滤的 flag 序列数，这项结果不在上一项 Total Sequences中，也不在以后的分析中&lt;/li&gt;
  &lt;li&gt;Sequence Length：显示最长和最短 read 长度，如果所有长度一致，只显示一个值。&lt;/li&gt;
  &lt;li&gt;%GC：所有序列所有碱基的 %GC。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;每个碱基的测序质量&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;../image/fastqc_image/per_base_sequence_content.png&quot; alt=&quot;&quot; /&gt;
1. Summary
展示 FastQ 文件每个位置每个碱基的质量范围。箱线图
- 中间的红线是中位数
- 蓝线是平均数&lt;/p&gt;

&lt;p&gt;y 轴代表质量分数，前景分为不同的颜色：
- 绿色：非常好
- 橘色：合格
- 红色：很差。
一般测序的质量会随测序长度逐渐降低。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Warning
碱基下四分位数小于 10，或者中位数小于 25.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Failure&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;碱基下四分位数质量小于 5，或者中位数小于 20.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;揭示 warnings 的常见原因&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最常见的原因是随测序的进行，质量逐渐下降。
通常可以通过软件剪掉一部分碱基。
没有去接头。
另一个原因有可能是因为测序过程中，run 短暂的出现问题，可以通过比较每个 tile 的质量图查看错误类型。可以考虑先 amsking 碱基，再比对。
如果 read 长度不一，可能会报错，因为某个碱基的覆盖度可能很低，下一步分析前，你需要查看哪些序列出了问题。&lt;/p&gt;

&lt;h3 id=&quot;per-sequence-quality-scores&quot;&gt;Per Sequence Quality Scores&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../image/fastqc_image/per_sequence_quality.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Summary
每条 read 的质量分数。通常由于测序机器原因，总有部分 reads 质量不好，但应该只占一小部分。
如果一个 run 中的测序结果有明显的一部分质量较低，可能是系统原因，可能是某个 flowcell 的问题。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;y 轴：reads 数
x 轴：质量&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Warning&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;平均值小于 27（=0.2% 错误率）&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Failure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;均值小于 20（=1% 错误率）&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;常见原因&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This module is generally fairly robust and errors here usually indicate a general loss of quality within a run. For long runs this may be alleviated through quality trimming. If a bi-modal, or complex distribution is seen then the results should be evaluated in concert with the per-tile qualities (if available) since this might indicate the reason for the loss in quality of a subset of sequences.&lt;/p&gt;

&lt;h3 id=&quot;per-base-sequence-content&quot;&gt;Per Base Sequence Content&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../image/fastqc_image/per_base_sequence_content.pn&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Summary&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;reads 的每个位置的每种碱基比例。
y 轴：百分比
x 轴：read 位置&lt;/p&gt;

&lt;p&gt;在随机库中，理想结果为 4 各碱基比率相同（25%），为一条直线。
值得注意的是，一些类型的库碱基比例会出现偏差，通常是在 read 的开始位置。这是由于系统原因造成的，包括 RNA-seq。虽然这是一个技术偏差，而且也不会对下游分析造成影响，但是，本模块还是会给出警告。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Warnning&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;任何位置 A 和 T，或者 G 和 C 的差异大于 10%&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Failure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;任何位置 A 和 T，或者 G 和 C 的差异大小 20%&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;常见原因&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;有以下几个常见原因：
1&amp;gt; Overrepresented sequences：如接头或者 rRNA
2&amp;gt; Biased fragmentation：由于系统的随机选择偏差，导致每个 run 的前 12bp 可能有偏差。
3&amp;gt; Biased composition libraries: 一些库的组成有偏差，比如经过了亚硫酸钠处理等，虽然对这个库很正常，但是模块会给出警告。
4&amp;gt; 如果库已过了去接头处理，可能会引起虚假的偏差，因为已经比对需要的接头已经去除了。&lt;/p&gt;

&lt;h3 id=&quot;per-sequence-gc-&quot;&gt;Per Sequence GC 含量&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;../image/fastqc_image/per_sequence_gc_content.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Summary
每条 read 的 GC 含量分布与正常分布的比较
y 轴：read 数
x 轴：GC%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Warning&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;15% reads 有偏差&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Failure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;30% 的 reads 有偏差。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;常见原因&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于污染或者系统误差造成。&lt;/p&gt;

&lt;h3 id=&quot;per-base-n-content&quot;&gt;Per Base N Content&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../image/fastqc_image/per_base_n_content.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Summary&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果不能识别某位置是什么碱基，会标为 N
该模块统计每个位置 N 的比例
y 轴：位置
x 轴：N 比例
正常情况下为一条直线，可能在末端有时会有突起。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Warning&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;5%&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Failure&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;20%&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;常见原因&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一个最可能的原因是某个位置的覆盖度比较低。
在测序质量很好的背景下有少部分位置发生高的 N 含量，可能是因为序列的组成有偏差，可以在 per-base-sequence-content 结果中查看。&lt;/p&gt;

&lt;h3 id=&quot;sequence-length-distribution&quot;&gt;Sequence Length Distribution&lt;/h3&gt;
&lt;p&gt;![../image/fastqc_image/sequence_length_distribution.png]
1. Summary
x 轴：reads 长度
y 轴：reads 数&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Warning
长度不一&lt;/li&gt;
  &lt;li&gt;Failure
有长度为 0&lt;/li&gt;
  &lt;li&gt;常见原因
有些平台的 reads 长度就量不一样，不用管它。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;duplicate-sequences&quot;&gt;Duplicate Sequences&lt;/h3&gt;
&lt;p&gt;1&lt;a href=&quot;../image/fastqc_image/duplication_levels.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Summary
一个低的 duplication 表明覆盖度较高，但是过高的 duplication 表明有富集偏差（如，PCR 过量扩增）。
y 轴：duplicated reads 数
x 轴：duplication 次数
无重复 reads 数为 100%
为了减少内存占用，仅对前100,000条不重复序列进行统计。
为了简化结果形式，对于多于10次重复的序列会人为地将其重复次数设定为10，因此结果图像上曲线会显示一个小的翘尾。
对于&amp;gt;75bp的序列，将其截短为前50bp进行统计，因相对而言长序列会包含较多测序错误而倾向于产生过多的统计重复。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Warning
非唯一序列大于 20%&lt;/li&gt;
  &lt;li&gt;Failure
非唯一序列大于 50%&lt;/li&gt;
  &lt;li&gt;常见原因
一般有两个原因：技术重复（PCR 扩增）、生物重复（不同拷贝）&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;overrepresented-sequences&quot;&gt;Overrepresented Sequences&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Summary
为了优化运算仅对前100,000条序列进行运算，将重复比例在所有序列中的占比&amp;gt;0.1%的结果进行列表输出，并且对其与常见的测序实验中使用的adapter等序列进行比对，比对时要求一致性长度&amp;gt;20p且无任何错配。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于&amp;gt;75bp的序列，将其截短为前50bp进行比对
2. Warning
重复序列大于 0.1%
3. Failure
重复序列大于 1%
4. 常见原因&lt;/p&gt;

&lt;h3 id=&quot;adapter-content&quot;&gt;Adapter Content&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Summary&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;接头序列统计
2. Warning
任何序列出现在 5% 的 reads 中
3. Failure
任何序列出现在 10% 的 reads 中&lt;/p&gt;

&lt;h3 id=&quot;kmer-content&quot;&gt;Kmer Content&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Summary
overrepresented sequence 并不总是有效，例如：
1）如低质量的长 reads，由于随机的测序错误会降低过表达序列统计数
2）如果小片段序列在不同的位置出现也不会以被统计到&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Kmer意为连指定长度为K的连续碱基
此部分的Kmer默认为连续7个碱基组成的一个单元，即任意一个碱基与其后相连的六个碱基构成了一个Kmer。
按read的位点逐一统计每一个位点的所有Kmer的情况，并在结果图中给出了前六个过表达的Kmer及其在read上的位点分布情况。
如果某k个bp的短序列在reads中大量出现，其频率高于统计期望的话，fastqc将其记为over-represente&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Warninn&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;p &amp;lt; 0.01&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Failure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;P &amp;lt; 10^5&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;常见原因&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;per-tile-sequence-quality&quot;&gt;Per Tile Sequence Quality&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;../image/fastqc_image/per_tile_quality.png&quot; alt=&quot;&quot; /&gt;
1. Summary
该模块展示 Illumina 测序的每个 flowcell tile 的结果，这样就可以直接看到是哪个 tile 的测序有问题。
冷色表示该 tile 的质量大于等于相应 run 的平均质量，热色系表示小于平均质量。总之，越蓝越好，越红越差。
y 轴：tile 编号
x 轴：read 位置&lt;/p&gt;

&lt;p&gt;产生的问题可能是由于暂时性问题，如有气泡，或者长时间的问题，如 flowcell 的壁上有污迹。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Warning
Phred score 低于均值的有 2 个&lt;/li&gt;
  &lt;li&gt;Failure
Phred score 低于均值的有 5 个&lt;/li&gt;
  &lt;li&gt;常见原因&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 26 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/04/26/fastqc-introdution-and-result/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/26/fastqc-introdution-and-result/</guid>
        
        <category>使用手册</category>
        
        
        <category>bioinformatics</category>
        
      </item>
    
  </channel>
</rss>
